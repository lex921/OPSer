#k8s helm安装minio8.0.10（单点和集群）

#一、安装单个节点
下载包：
[root@master-1 minio]# helm repo add minio https://helm.min.io/
[root@master-1 minio]# helm fetch minio/minio
[root@master-1 minio]# tar zxvf minio-8.0.10.tgz;cd minio
[root@master-1 minio]# vim values.yaml
resources:
  requests:
    memory: 256Mi

##1、安装
[root@master-1 minio]# helm install minio --namespace minio --create-namespace --set accessKey=minio,secretKey=minio123 --set mode=standalone --set service.type=NodePort --set persistence.enabled=false --set persistence.size=10Gi -f ./values.yaml  minio/minio
NAME: minio
LAST DEPLOYED: Mon Jan 17 17:57:36 2022
NAMESPACE: minio
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Minio can be accessed via port 9000 on the following DNS name from within your cluster:
minio.minio.svc.cluster.local

To access Minio from localhost, run the below commands:

  1. export POD_NAME=$(kubectl get pods --namespace minio -l "release=minio" -o jsonpath="{.items[0].metadata.name}")

  2. kubectl port-forward $POD_NAME 9000 --namespace minio

Read more about port forwarding here: http://kubernetes.io/docs/user-guide/kubectl/kubectl_port-forward/

You can now access Minio server on http://localhost:9000. Follow the below steps to connect to Minio server with mc client:

  1. Download the Minio mc client - https://docs.minio.io/docs/minio-client-quickstart-guide

  2. Get the ACCESS_KEY=$(kubectl get secret minio -o jsonpath="{.data.accesskey}" | base64 --decode) and the SECRET_KEY=$(kubectl get secret minio -o jsonpath="{.data.secretkey}" | base64 --decode)

  3. mc alias set minio-local http://localhost:9000 "$ACCESS_KEY" "$SECRET_KEY" --api s3v4

  4. mc ls minio-local

Alternately, you can use your browser or the Minio SDK to access the server - https://docs.minio.io/categories/17
[root@master-1 minio]# 



[root@master-1 minio]# kubectl  -n minio get deployment,svc,pod -o wide
NAME                    READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES                                     SELECTOR
deployment.apps/minio   1/1     1            1           2m30s   minio        minio/minio:RELEASE.2021-02-14T04-01-33Z   app=minio,release=minio

NAME            TYPE       CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE     SELECTOR
service/minio   NodePort   10.1.236.67   <none>        9000:32000/TCP   2m30s   app=minio,release=minio

NAME                        READY   STATUS    RESTARTS   AGE     IP           NODE     NOMINATED NODE   READINESS GATES
pod/minio-f9df88b99-dhfh5   1/1     Running   0          2m29s   10.244.1.5   node-1   <none>           <none>
[root@master-1 minio]# 


##2、访问
用户名/密码：minio/minio123
10.244.1.5   node-1  32000
http://172.16.201.135:32000/minio/login


##3、卸载：
[root@master-1 minio]# helm delete minio --namespace minio
release "minio" uninstalled

[root@master-1 minio]# kubectl  -n minio get deployment,svc,pod -o wide
No resources found in minio namespace.

#二、安装 minio 集群
下载包：
[root@master-1 minio]# helm repo add minio https://helm.min.io/
[root@master-1 minio]# helm fetch minio/minio
[root@master-1 minio]# tar zxvf minio-8.0.10.tgz;cd minio
[root@master-1 minio]# vim values.yaml
resources:
  requests:
    memory: 256Mi


4. 部署实例
[root@master-1 minio]# helm install minio --namespace minio --create-namespace --set accessKey=minio,secretKey=minio123 --set mode=distributed --set replicas=4 --set service.type=NodePort --set persistence.enabled=false --set persistence.size=10Gi -f ./values.yaml minio/minio
NAME: minio
LAST DEPLOYED: Mon Jan 17 18:08:17 2022
NAMESPACE: minio
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
Minio can be accessed via port 9000 on the following DNS name from within your cluster:
minio.minio.svc.cluster.local

To access Minio from localhost, run the below commands:

  1. export POD_NAME=$(kubectl get pods --namespace minio -l "release=minio" -o jsonpath="{.items[0].metadata.name}")

  2. kubectl port-forward $POD_NAME 9000 --namespace minio

Read more about port forwarding here: http://kubernetes.io/docs/user-guide/kubectl/kubectl_port-forward/

You can now access Minio server on http://localhost:9000. Follow the below steps to connect to Minio server with mc client:

  1. Download the Minio mc client - https://docs.minio.io/docs/minio-client-quickstart-guide

  2. Get the ACCESS_KEY=$(kubectl get secret minio -o jsonpath="{.data.accesskey}" | base64 --decode) and the SECRET_KEY=$(kubectl get secret minio -o jsonpath="{.data.secretkey}" | base64 --decode)

  3. mc alias set minio-local http://localhost:9000 "$ACCESS_KEY" "$SECRET_KEY" --api s3v4

  4. mc ls minio-local

Alternately, you can use your browser or the Minio SDK to access the server - https://docs.minio.io/categories/17
[root@master-1 minio]# 

[root@master-1 minio]# kubectl  -n minio get statefulset,svc,endpoints,pod -o wide
NAME                     READY   AGE   CONTAINERS   IMAGES
statefulset.apps/minio   4/4     59s   minio        minio/minio:RELEASE.2021-02-14T04-01-33Z

NAME                TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)          AGE   SELECTOR
service/minio       NodePort    10.1.68.126   <none>        9000:32000/TCP   59s   app=minio,release=minio
service/minio-svc   ClusterIP   None          <none>        9000/TCP         59s   app=minio,release=minio

NAME                  ENDPOINTS                                                     AGE
endpoints/minio       10.244.0.2:9000,10.244.1.6:9000,10.244.1.7:9000 + 1 more...   59s
endpoints/minio-svc   10.244.0.2:9000,10.244.1.6:9000,10.244.1.7:9000 + 1 more...   59s

NAME          READY   STATUS    RESTARTS   AGE   IP           NODE       NOMINATED NODE   READINESS GATES
pod/minio-0   1/1     Running   0          59s   10.244.1.6   node-1     <none>           <none>
pod/minio-1   1/1     Running   0          59s   10.244.2.6   node-2     <none>           <none>
pod/minio-2   1/1     Running   0          59s   10.244.0.2   master-1   <none>           <none>
pod/minio-3   1/1     Running   0          59s   10.244.1.7   node-1     <none>           <none>
[root@master-1 minio]# 



##3、测试
访问pod：
[root@master-1 minio]# kubectl exec -it pod/minio-0 -n minio -- /bin/bash
[root@minio-0 /]# ls
bin  boot  data  dev  etc  export  home  lib  lib64  licenses  lost+found  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var


数据的增、删、改、查：
在http://172.16.201.135:32000/minio/ 建立文件夹，上传文件
在http://172.16.201.134:32000/minio/222/直接可以访问此文件

##4、MinIO客户端:
MinIO Client (mc)为ls，cat，cp，mirror，diff，find等UNIX命令提供了一种替代方案。它支持文件系统和兼容Amazon S3的云存储服务（AWS Signature v2和v4）。
ls       列出文件和文件夹。
mb       创建一个存储桶或一个文件夹。
cat      显示文件和对象内容。
pipe     将一个STDIN重定向到一个对象或者文件或者STDOUT。
share    生成用于共享的URL。
cp       拷贝文件和对象。
mirror   给存储桶和文件夹做镜像。
find     基于参数查找文件。
diff     对两个文件夹或者存储桶比较差异。
rm       删除文件和对象。
events   管理对象通知。
watch    监听文件和对象的事件。
policy   管理访问策略。
session  为cp命令管理保存的会话。
config   管理mc配置文件。
update   检查软件更新。
version  输出版本信息。


下载客户端：
[root@master-1 minio]# wget https://dl.min.io/client/mc/release/linux-amd64/mc
[root@master-1 minio]# mc -v
mc version RELEASE.2022-01-07T06-01-38Z

[root@master-1 minio]# mc ls local
mc: <ERROR> Unable to list folder. Get "http://localhost:9000/": dial tcp [::1]:9000: connect: connection refused
[root@master-1 minio]# 

[root@master-1 minio]# mc alias set local http://172.16.201.134:32000 minio minio123
Added `local` successfully.

[root@master-1 minio]# mc ls local
[2022-01-17 18:10:42 CST]     0B 222/
[2022-01-17 18:19:21 CST]     0B 333/

跟http://172.16.201.135:32000/minio/ 下目录对应，证明数据没有问题。

##5、查看集群信息
[root@master-1 minio]# mc admin info local 
●  minio-0.minio-svc.minio.svc.cluster.local:9000
   Uptime: 24 minutes 
   Version: 2021-02-14T04:01:33Z
   Network: 4/4 OK 
   Drives: 1/1 OK 

●  minio-1.minio-svc.minio.svc.cluster.local:9000
   Uptime: 23 minutes 
   Version: 2021-02-14T04:01:33Z
   Network: 4/4 OK 
   Drives: 1/1 OK 

●  minio-2.minio-svc.minio.svc.cluster.local:9000
   Uptime: 23 minutes 
   Version: 2021-02-14T04:01:33Z
   Network: 4/4 OK 
   Drives: 1/1 OK 

●  minio-3.minio-svc.minio.svc.cluster.local:9000
   Uptime: 24 minutes 
   Version: 2021-02-14T04:01:33Z
   Network: 4/4 OK 
   Drives: 1/1 OK 

17 KiB Used, 2 Buckets, 1 Object
4 drives online, 0 drives offline
[root@master-1 minio]# 

由此可见，已经部署了一个4节点的minio集群。



##6、注意事项
本文主要是用于测试，由此使用容器的临时存储，如果在生产上使用者需要指定动态存储类，可以使用 nfs、longhorn、ceph 等持久化存储。
更多持久化存储见： k8s storage-classes
笔者新建nfs-client 存储类后，通过nfs动态分配存储空间，从而实现了minio 的持久化存储。
helm install minio \
  --namespace minio --create-namespace \
  --set accessKey=minio,secretKey=minio123 \
  --set mode=distributed \
  --set replicas=4 \
  --set service.type=NodePort \
  --set persistence.enabled=true \
  --set persistence.size=500Mi \
  --set persistence.storageClass=nfs-client \ 
  minio-8.0.10/minio

存储路径如下：
/data/nfs$ ls
minio-export-minio-0-pvc-6878e732-f577-491e-8545-ba69dc5471f4
minio-export-minio-1-pvc-90fc0d1d-cab5-40e1-bb68-45ec1362d233
minio-export-minio-2-pvc-8e527781-7f45-47b5-b5c4-62ce4a666f08
minio-export-minio-3-pvc-5374587c-d38c-4006-abc3-5ab2aa41fbec
test-nfs

##7、说明
软件环境
k8s 版本： 1.19.9
helm chart 版本： minio/minio:minio-8.0.10
minio镜像版本：minio/minio:RELEASE.2021-02-14T04-01-33Z

##8、参考文档:
https://docs.min.io/
https://blog.csdn.net/u011127242/article/details/119768901
https://blog.csdn.net/weixin_42914965/article/details/106035429
https://blog.csdn.net/networken/article/details/111469223
https://blog.csdn.net/weixin_42660934/article/details/107833794
