##(二)、Deployment+NodePort模式的Service部署方式 

只是简单增加两个nodePort字段，指定service在Node节点映射的端口，这样在上层负载均衡继续做代理就会方便很多。
由于这里的nodePort是对service端口的映射，所以会自动在所有Node节点生成端口映射。
接着就可以在上层负载均衡器做反向代理，将流量负载到所有Node的30080和30443端口，
最后对外只需要暴露负载均衡的IP+Port即可。



######yaml文件配置修改
[root@k8s-master ingress]# vim ingress-deploy.yaml
………………
apiVersion: apps/v1
kind: DaemonSet   # 从Deployment改为DaemonSet
metadata:
  name: nginx-ingress-controller
  namespace: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  #replicas: 1   # 注释掉
………………
      nodeSelector:
      # 如下几行为新加行  作用【允许在master节点运行】
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
………………
          ports:
            - name: http
              containerPort: 80
              hostPort: 80    # 添加处【可在宿主机通过该端口访问Pod】
              protocol: TCP
							nodePort: 30080
            - name: https
              containerPort: 443
              hostPort: 443   # 添加处【可在宿主机通过该端口访问Pod】
              protocol: TCP
							nodePort: 30443
………………


可能有些人会对ingress-controller和ingress这两个概念不理解，会感觉太抽象。
做个简单的比喻：
1、ingress-controller相当于在pod中部署了一个“nginx”的负载均衡器，对外只需要暴露这个负载均衡器的端口；
2、ingress则相当于在“nginx”中创建代理的配置文件，指定访问过来的流量被转发到哪个service资源。

下面是一个大概的对照关系：
ingress-controller——>>>nginx
ingress———————>>/etc/nginx/conf.d/xxx.com.conf文件








#####增加站点www.test02.com：
[root@master-1 ~]# cat test-ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: test-ns
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: test-ingress-class
  rules:
  - host: www.test02.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: tomcat-svc
            port:
             number: 8080


  - host: www.test01.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: httpd-svc
            port: 
             number: 80
      - pathType: Prefix
        path: /tomcat
        backend:
          service:
            name: tomcat-svc
            port: 
             number: 8080
[root@master-1 ~]# 


[root@master-1 ~]# kubectl apply -f test-ingress.yaml 
ingress.networking.k8s.io/test-ingress configured


客户端访问：
lex@lexliudeMacBook-Pro Downloads %curl  -I www.test02.com/
HTTP/1.1 200 
Date: Sun, 26 Sep 2021 04:01:32 GMT
Content-Type: text/html;charset=UTF-8
Connection: keep-alive
Set-Cookie: JSESSIONID=F39634B026FC8389D3F5E42DEE21C848; Path=/; HttpOnly
