##(十八)、k8s部署Maven Nexus私服
[root@node-1 maven]# wget https://sonatype-download.global.ssl.fastly.net/repository/downloads-prod-group/3/nexus-3.37.0-01-unix.tar.gz
[root@node-1 maven]# tar -xvf nexus-3.37.0-01-unix.tar.gz
[root@node-1 maven]# vim  nexus-3.37.0-01/bin/nexus.vmoptions 
-Xms1600m
-Xmx1800m
-XX:MaxDirectMemorySize=2099m
-XX:+UnlockDiagnosticVMOptions
-XX:+LogVMOutput
-XX:LogFile=/data/maven-nexus/log/jvm.log
-XX:-OmitStackTraceInFastThrow
-Djava.net.preferIPv4Stack=true
-Dkaraf.home=.
-Dkaraf.base=.
-Dkaraf.etc=etc/karaf
-Djava.util.logging.config.file=etc/karaf/java.util.logging.properties
-Dkaraf.data=/data/maven-nexus/data
-Dkaraf.log=../sonatype-work/nexus3/log
-Djava.io.tmpdir=/data/maven-nexus/tmp
-Dkaraf.startLocalConsole=false
-Djdk.tls.ephemeralDHKeySize=2048


主要是就是下面这些：
-XX:LogFile=/data/maven-nexus/log/jvm.log   # 日志文件生成位置
-Dkaraf.data=/data/maven-nexus/data         # 仓库数据存放位置(上传的jar包)
-Djava.io.tmpdir=/data/maven-nexus/tmp      # 临时文件存放位置
[root@node-1 maven]# tar -czvf nexus-3.37.0-01-my.tar.gz nexus-3.37.0-01 sonatype-work


[root@node-1 maven]# docker login
Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
Username: lex921
Password: 

[root@node-1 maven]# docker pull halcom/oracle-jdk8:151
151: Pulling from halcom/oracle-jdk8
8d30e94188e7: Pull complete 
837109e7db31: Pull complete 
9fa483f86897: Pull complete 
258a46ee0c37: Pull complete 
fb10d2832630: Pull complete 
Digest: sha256:7cb312302573114d20233a06cd51c7618e7bcac46a33e63c2c88914f11a89e26
Status: Downloaded newer image for halcom/oracle-jdk8:151
docker.io/halcom/oracle-jdk8:151
[root@node-1 maven]# 


[root@node-1 maven]# vim Dockerfile
FROM halcom/oracle-jdk8:151
ADD nexus-3.37.0-01-my.tar.gz /opt
ENTRYPOINT ["/opt/nexus-3.37.0-01/bin/nexus", "run"]

[root@node-1 maven]# docker build . -t nexus:0.1
Sending build context to Docker daemon  672.4MB
Step 1/3 : FROM halcom/oracle-jdk8:151
 ---> 96f4574f5640
Step 2/3 : ADD nexus-3.37.0-01-my.tar.gz /opt
 ---> 616c4771f796
Step 3/3 : ENTRYPOINT ["/opt/nexus-3.37.0-01/bin/nexus", "run"]
 ---> Running in f32ffeea0feb
Removing intermediate container f32ffeea0feb
 ---> 9a3a76ba9535
Successfully built 9a3a76ba9535
Successfully tagged nexus:0.1
[root@node-1 maven]#  



kubectl create -f nexus-pv-pvc.yaml
kubectl delete -f nexus-pv-pvc.yaml
[root@master-1 maven]# cat nexus-pv-pvc.yaml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nexus3-data-pv
  labels:
    app: nexus3-data-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: /data/maven-nexus

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus3-data-pvc
  labels:
    app: nexus3-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      app: nexus3-data-pv

[root@master-1 maven]# 


[root@master-1 maven]# cat nexus-deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: nexus3
  name: nexus3
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nexus3
  template:
    metadata:
      labels:
        app: nexus3
    spec:
      containers:
        - name: nexus3
          image: nexus:0.1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8081
            protocol: TCP
          volumeMounts:
          - name: nexus-data
            mountPath: /data/maven-nexus
      volumes:
        - name: nexus-data
          persistentVolumeClaim:
            claimName: nexus3-data-pvc
      nodeSelector:
        kubernetes.io/hostname: node-1
[root@master-1 maven]# 
[root@master-1 maven]# kubectl get pod |grep nexus3
nexus3-654b948474-m75r6          1/1     Running   0          16s
kubectl delete -f nexus-deployment.yaml




[root@master-1 maven]# cat nexus-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nexus3
  name: nexus3
spec:
  type: NodePort
  ports:
  - port: 8081
    targetPort: 8081
    nodePort: 8081
    name: web-ui
  - port: 5000
    targetPort: 5000
    nodePort: 5000
    name: docker-group
  - port: 8889
    targetPort: 8889
    nodePort: 8889
    name: docker-push
  selector:
    app: nexus3
[root@master-1 maven]# kubectl create -f nexus-svc.yaml
service/nexus3 created

kubectl delete -f nexus-svc.yaml
[root@master-1 maven]# kubectl get svc
NAME            TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)                                     AGE
blog-mysql      ClusterIP   10.1.71.85     <none>        3306/TCP                                    25h
kubernetes      ClusterIP   10.1.0.1       <none>        443/TCP                                     36h
nexus3          NodePort    10.1.64.97     <none>        8081:8081/TCP,5000:5000/TCP,8889:8889/TCP   4s
php-fpm-nginx   NodePort    10.1.97.87     <none>        80:30071/TCP                                15h
spring-k8s      NodePort    10.1.114.102   <none>        80:30008/TCP                                5h5m

http://172.16.201.134:8081/#browse/welcome
Your admin user password is located in
/data/maven-nexus/data/admin.password on the server.


[root@master-1 maven]# kubectl exec -it nexus3-5c6f988994-hbvd2 -- bash
[root@nexus3-5c6f988994-hbvd2 /]# cat /data/maven-nexus/data/admin.password
d1e33304-09b8-40c9-8348-63f160ee48e2[root@nexus3-5c6f988994-hbvd2 /]# 
进去改密码：admin/11111111





kubectl get pod
kubectl get svc
kubectl get pv
kubectl describe pod blog-php-65bd88456b-ztd25
kubectl get event -n mt-math 
kubectl get event

docker logs --tail="100"  d62c524204dc
kubectl logs --tail 200 -f nexus3-5c6f988994-fctk5
